* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
DEFINE DATA

PARAMETER USING NUTESTP

LOCAL USING NUCONST
LOCAL USING NUASSP

LOCAL USING NUTCP
LOCAL USING NUCRSTAP

LOCAL

01 #INDEX-TEST (I4)

END-DEFINE
/***********************************************************************

NUTESTP.FIXTURE := 'Should collect test results'

INCLUDE NUTCTEMP
DEFINE SUBROUTINE TEST

/***********************************************************************
IF NUTESTP.TEST EQ 'for a testcase with success'
/***********************************************************************
  RESET INITIAL NUTCP NUCRSTAP #INDEX-TEST

  PERFORM ADD-SUCCESS-TEST

  PERFORM NU-CREATE-STATISTICS NUTCP NUCRSTAP

  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTS-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTS-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTS-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 2 NUCRSTAP.NUM-ASSERTS
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'for a testcase with skipped'
/***********************************************************************
  RESET INITIAL NUTCP NUCRSTAP #INDEX-TEST

  PERFORM ADD-SUCCESS-TEST
  PERFORM ADD-SKIPPED-TEST

  PERFORM NU-CREATE-STATISTICS NUTCP NUCRSTAP

  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 2 NUCRSTAP.NUM-TESTS
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTS-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTS-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 3 NUCRSTAP.NUM-ASSERTS

  RESET INITIAL NUTCP NUCRSTAP #INDEX-TEST

  PERFORM ADD-SKIPPED-TEST

  PERFORM NU-CREATE-STATISTICS NUTCP NUCRSTAP

  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTS-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTS-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-ASSERTS
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'for a testcase with error'
/***********************************************************************
  RESET INITIAL NUTCP NUCRSTAP #INDEX-TEST

  PERFORM ADD-SUCCESS-TEST
  PERFORM ADD-FAILURE-TEST
  PERFORM ADD-SKIPPED-TEST

  PERFORM NU-CREATE-STATISTICS NUTCP NUCRSTAP

  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 3 NUCRSTAP.NUM-TESTS
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTS-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 10 NUCRSTAP.NUM-ASSERTS
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'for a testcase with failure'
/***********************************************************************
  RESET INITIAL NUTCP NUCRSTAP #INDEX-TEST

  PERFORM ADD-ERROR-TEST
  PERFORM ADD-SUCCESS-TEST
  PERFORM ADD-FAILURE-TEST
  PERFORM ADD-SKIPPED-TEST

  PERFORM NU-CREATE-STATISTICS NUTCP NUCRSTAP

  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 4 NUCRSTAP.NUM-TESTS
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTS-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 15 NUCRSTAP.NUM-ASSERTS
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'for a testsuite'
/***********************************************************************
  RESET INITIAL NUTCP NUCRSTAP #INDEX-TEST

  PERFORM ADD-ERROR-TEST
  PERFORM ADD-SUCCESS-TEST
  PERFORM ADD-FAILURE-TEST
  PERFORM ADD-SKIPPED-TEST

  PERFORM ADD-ERROR-TEST
  NUTCP.TESTCASE(#INDEX-TEST)      := 'TEST1'

  PERFORM ADD-SUCCESS-TEST
  NUTCP.TESTCASE(#INDEX-TEST)      := 'TEST1'

  PERFORM ADD-FAILURE-TEST
  NUTCP.TESTCASE(#INDEX-TEST)      := 'TEST2'

  PERFORM ADD-SKIPPED-TEST
  NUTCP.TESTCASE(#INDEX-TEST)      := 'TEST2'

  PERFORM NU-CREATE-STATISTICS NUTCP NUCRSTAP

  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 3 NUCRSTAP.NUM-TESTCASES
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 NUCRSTAP.NUM-TESTCASES-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 2 NUCRSTAP.NUM-TESTCASES-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 0 NUCRSTAP.NUM-TESTCASES-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 8 NUCRSTAP.NUM-TESTS
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 2 NUCRSTAP.NUM-TESTS-FAILURE
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 2 NUCRSTAP.NUM-TESTS-ERROR
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 2 NUCRSTAP.NUM-TESTS-SKIPPED
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 30 NUCRSTAP.NUM-ASSERTS
END-IF

END-SUBROUTINE

/***********************************************************************
DEFINE SUBROUTINE ADD-SUCCESS-TEST
/***********************************************************************
#INDEX-TEST := *OCC(NUTCP.TEST)
ADD 1 TO #INDEX-TEST
EXPAND ARRAY NUTCP.TESTS TO (1:#INDEX-TEST)

NUTCP.TESTLIB(#INDEX-TEST)       := 'NATUNIT'
NUTCP.TESTCASE(#INDEX-TEST)      := 'TESTCASE'
NUTCP.TEST(#INDEX-TEST)          := 'first Test success'
NUTCP.NUM-ASSERTS(#INDEX-TEST)   := 2
NUTCP.TEST-RESULT(#INDEX-TEST)   := C-NU-SUCCESS
NUTCP.TEST-MESSAGE(#INDEX-TEST)  := 'Hello again'
* NUTCP.TEST-EXECTIME(#INDEX-TEST) := 5
END-SUBROUTINE

/***********************************************************************
DEFINE SUBROUTINE ADD-SKIPPED-TEST
/***********************************************************************
#INDEX-TEST := *OCC(NUTCP.TEST)
ADD 1 TO #INDEX-TEST
EXPAND ARRAY NUTCP.TESTS TO (1:#INDEX-TEST)

NUTCP.TESTLIB(#INDEX-TEST)       := 'NATUNIT'
NUTCP.TESTCASE(#INDEX-TEST)      := 'TESTCASE'
NUTCP.TEST(#INDEX-TEST)          := 'second Test skipped'
NUTCP.NUM-ASSERTS(#INDEX-TEST)   := 1
NUTCP.TEST-RESULT(#INDEX-TEST)   := C-NU-SKIPPED
NUTCP.TEST-MESSAGE(#INDEX-TEST)  := 'Hello again'
* NUTCP.TEST-EXECTIME(#INDEX-TEST) := 5

END-SUBROUTINE

/***********************************************************************
DEFINE SUBROUTINE ADD-ERROR-TEST
/***********************************************************************
#INDEX-TEST := *OCC(NUTCP.TEST)
ADD 1 TO #INDEX-TEST
EXPAND ARRAY NUTCP.TESTS TO (1:#INDEX-TEST)

NUTCP.TESTLIB(#INDEX-TEST)       := 'NATUNIT'
NUTCP.TESTCASE(#INDEX-TEST)      := 'TESTCASE'
NUTCP.TEST(#INDEX-TEST)          := 'Test with error'
NUTCP.NUM-ASSERTS(#INDEX-TEST)   := 5
NUTCP.TEST-RESULT(#INDEX-TEST)   := C-NU-ERROR
NUTCP.TEST-MESSAGE(#INDEX-TEST)  := 'Hello again'
* NUTCP.TEST-EXECTIME(#INDEX-TEST) := 7

END-SUBROUTINE

/***********************************************************************
DEFINE SUBROUTINE ADD-FAILURE-TEST
/***********************************************************************
#INDEX-TEST := *OCC(NUTCP.TEST)
ADD 1 TO #INDEX-TEST
EXPAND ARRAY NUTCP.TESTS TO (1:#INDEX-TEST)

NUTCP.TESTLIB(#INDEX-TEST)       := 'NATUNIT'
NUTCP.TESTCASE(#INDEX-TEST)      := 'TESTCASE'
NUTCP.TEST(#INDEX-TEST)          := 'Test with error'
NUTCP.NUM-ASSERTS(#INDEX-TEST)   := 7
NUTCP.TEST-RESULT(#INDEX-TEST)   := C-NU-FAILURE
NUTCP.TEST-MESSAGE(#INDEX-TEST)  := 'Hello again'
* NUTCP.TEST-EXECTIME(#INDEX-TEST) := 9

END-SUBROUTINE

END

