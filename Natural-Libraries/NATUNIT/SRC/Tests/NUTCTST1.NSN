* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/***********************************************************************

/*  File: NUTCTST1

/*  NATUNIT's internal dummy TestCase 1 for NUTCSEQ, has no valid Interface.

/*  Parameters:
/*    NUTESTP - TestCase parameters.

/*  Returns:
/*    NUTESTP - TestCase parameters.

/***********************************************************************
DEFINE DATA

PARAMETER USING NUTESTP

PARAMETER
01 P-SEQUENCE (A/1:*) DYNAMIC

LOCAL USING NUCONST
LOCAL USING NUASSP

LOCAL
01 #S (N2)
01 #STEP (A) DYNAMIC

01 #X (I4)
01 #Y (I4)

01 #VALUE-X (A) DYNAMIC
01 #VALUE-Y (A) DYNAMIC

END-DEFINE

NUTESTP.FIXTURE := 'Order of subroutine calls from template'

INCLUDE NUTCTEMP

DEFINE SUBROUTINE LOG-STEP
#S := *OCCURRENCE(P-SEQUENCE) + 1
RESIZE ARRAY P-SEQUENCE TO (1:#S)
P-SEQUENCE(#S) := #STEP
END-SUBROUTINE

DEFINE SUBROUTINE SETUP
COMPRESS *CURRENT-UNIT TEST INTO #STEP
PERFORM LOG-STEP
END-SUBROUTINE

DEFINE SUBROUTINE TEARDOWN
COMPRESS *CURRENT-UNIT TEST INTO #STEP
PERFORM LOG-STEP
END-SUBROUTINE

DEFINE SUBROUTINE TEST

COMPRESS *CURRENT-UNIT TEST INTO #STEP
PERFORM LOG-STEP

IF NUTESTP.TEST EQ 'The first test'
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 1
END-IF

IF NUTESTP.TEST EQ 'The second test'
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 2
END-IF

IF NUTESTP.TEST EQ 'The third test'
  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP 1 1
END-IF

IF NUTESTP.TEST EQ 'Parameterized Test'
  IF NUTESTP.TEST-DATA-PARAM EQ C-NU-PARSE-TEST-DATA
    EXPAND ARRAY TEST-DATA TO (1:2)
    TEST-DATA(1) := '5;6'
    TEST-DATA(2) := '7;8'
    ESCAPE ROUTINE
  END-IF

  SEPARATE NUTESTP.TEST-DATA-PARAM INTO #VALUE-X #VALUE-Y WITH DELIMITER ';'
  #X := VAL(#VALUE-X)
  #Y := VAL(#VALUE-Y)

  ASSERT-LINE := *LINE; PERFORM ASSERT-NUM-EQUALS NUASSP #X #Y
END-IF

END-SUBROUTINE

END

