* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/***********************************************************************

/*  File: NUTCASS

/*  NATUNIT's internal TestCase for assertions.

/*  Parameters:
/*    NUTESTP - TestCase parameters.

/*  Returns:
/*    NUTESTP - TestCase parameters.

/***********************************************************************
DEFINE DATA

PARAMETER USING NUTESTP

LOCAL USING NUCONST
LOCAL USING NUASSP

LOCAL
01 #STRING1 (A) DYNAMIC
01 #STRING2 (A) DYNAMIC
01 #STRING3 (A8)

01 #NUM1 (N20,6)
01 #NUM2 (N20,6)
01 #NUM3 (N8)
01 #ACCURACY (N1,7)

01 #ARRAY1 (A/1:*) DYNAMIC
01 #ARRAY2 (A/1:*) DYNAMIC
01 #ARRAY3 (A10/1:*)

01 #ARRAY1N (N8/1:*)
01 #ARRAY2N (N8/1:*)
01 #ARRAY3N (N6,2/1:*)

01 #RESULT (L)

END-DEFINE

NUTESTP.FIXTURE := 'Assertion tests'

INCLUDE NUTCTEMP

DEFINE SUBROUTINE TEST

/***********************************************************************
IF NUTESTP.TEST EQ 'strings equal'
/***********************************************************************
  #STRING1 := 'test'
  #STRING2 := 'test2'

/* compare string to itself
  PERFORM WRAP-ASSERT-STRING-EQUALS #STRING1 #STRING1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

/* compare different strings
  PERFORM WRAP-ASSERT-STRING-EQUALS #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

/* compare strings with trailing/leading blanks
  #STRING1 := 'test'
  #STRING2 := 'test '

  PERFORM WRAP-ASSERT-STRING-EQUALS #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #STRING1 := 'test'
  #STRING2 := ' test'

  PERFORM WRAP-ASSERT-STRING-EQUALS #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

/* compare empty strings
  RESET #STRING1 #STRING2

  PERFORM WRAP-ASSERT-STRING-EQUALS #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

/* compare strings with different variable lenghts
  #STRING1 := 'test'
  #STRING3 := 'test'

  PERFORM WRAP-ASSERT-STRING-EQUALS #STRING1 #STRING3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'strings are identical'
/***********************************************************************
  #STRING1 := 'test'
  #STRING2 := 'test2'

/* compare string to itself
  PERFORM WRAP-ASSERT-STRING-SAME #STRING1 #STRING1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

/* compare different strings
  PERFORM WRAP-ASSERT-STRING-SAME #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

/* compare strings with trailing/leading blanks
  #STRING1 := 'test'
  #STRING2 := 'test '

  PERFORM WRAP-ASSERT-STRING-SAME #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #STRING1 := 'test'
  #STRING2 := ' test'

  PERFORM WRAP-ASSERT-STRING-SAME #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

/* compare empty strings
  RESET INITIAL #STRING1 #STRING2

  PERFORM WRAP-ASSERT-STRING-SAME #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

/* compare strings with different variable lenghts
  #STRING1 := 'test'
  #STRING3 := 'test'

  PERFORM WRAP-ASSERT-STRING-SAME #STRING1 #STRING3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'numbers equal'
/***********************************************************************
  #NUM1 := 12345678,1234
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM1 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 12345678,1234
  #NUM2 := 12345678,1234
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 12345678,1234
  #NUM2 := 423423,1122
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 12345678,123456
  #NUM2 := 12345678,123457
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 123456
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 123456,00
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 123456,0001
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM3 := 123457
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := -1234
  #NUM2 := -1234
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := -1234
  #NUM2 := 1234
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'alphanumeric arrays equal or same'
/***********************************************************************
  RESIZE ARRAY #ARRAY1 TO (1:3)
  RESIZE ARRAY #ARRAY2 TO (1:3)
  RESIZE ARRAY #ARRAY3 TO (1:3)

  #ARRAY1(1) := 'test'
  #ARRAY1(2) := 'test 123'
  #ARRAY1(3) := 'test sssd'

  #ARRAY3(1) := 'test'
  #ARRAY3(2) := 'test 123'
  #ARRAY3(3) := 'test sssd'

  #ARRAY2(1) := 'test2'
  #ARRAY2(2) := 'test2 asdf'
  #ARRAY2(3) := 'test sssd'

  PERFORM WRAP-ASSERT-ARRAY-A-EQUALS #ARRAY1(*) #ARRAY1(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-A-SAME #ARRAY1(*) #ARRAY1(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  PERFORM WRAP-ASSERT-ARRAY-A-EQUALS #ARRAY1(*) #ARRAY2(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-A-SAME #ARRAY1(*) #ARRAY2(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  PERFORM WRAP-ASSERT-ARRAY-A-EQUALS #ARRAY1(*) #ARRAY3(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-A-SAME #ARRAY1(*) #ARRAY3(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #ARRAY2(1) := #ARRAY1(1)
  #ARRAY2(2) := #ARRAY1(3)
  #ARRAY2(3) := #ARRAY1(2)
  PERFORM WRAP-ASSERT-ARRAY-A-EQUALS #ARRAY1(*) #ARRAY2(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-A-SAME #ARRAY1(*) #ARRAY2(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #ARRAY2(1) := #ARRAY1(1)
  #ARRAY2(2) := 'asdfasdf'
  #ARRAY2(3) := #ARRAY1(3)
  PERFORM WRAP-ASSERT-ARRAY-A-EQUALS #ARRAY1(*) #ARRAY2(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-A-SAME #ARRAY1(*) #ARRAY2(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'numeric arrays equal or same'
/***********************************************************************
  RESIZE ARRAY #ARRAY1N TO (1:3)
  RESIZE ARRAY #ARRAY2N TO (1:3)
  RESIZE ARRAY #ARRAY3N TO (1:3)

  #ARRAY1N(1) := 123
  #ARRAY1N(2) := 234
  #ARRAY1N(3) := 345

  #ARRAY3N(1) := 123
  #ARRAY3N(2) := 234
  #ARRAY3N(3) := 345

  #ARRAY2N(1) := 534
  #ARRAY2N(2) := 231
  #ARRAY2N(3) := 432

  PERFORM WRAP-ASSERT-ARRAY-N-EQUALS #ARRAY1N(*) #ARRAY1N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-N-SAME #ARRAY1N(*) #ARRAY1N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  PERFORM WRAP-ASSERT-ARRAY-N-EQUALS #ARRAY1N(*) #ARRAY2N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-N-SAME #ARRAY1N(*) #ARRAY2N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  PERFORM WRAP-ASSERT-ARRAY-N-EQUALS #ARRAY1N(*) #ARRAY3N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-N-SAME #ARRAY1N(*) #ARRAY3N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #ARRAY2N(1) := #ARRAY1N(1)
  #ARRAY2N(2) := #ARRAY1N(3)
  #ARRAY2N(3) := #ARRAY1N(2)
  PERFORM WRAP-ASSERT-ARRAY-N-EQUALS #ARRAY1N(*) #ARRAY2N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-N-SAME #ARRAY1N(*) #ARRAY2N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #ARRAY2N(1) := #ARRAY1N(1)
  #ARRAY2N(2) := 54378
  #ARRAY2N(3) := #ARRAY1N(3)
  PERFORM WRAP-ASSERT-ARRAY-N-EQUALS #ARRAY1N(*) #ARRAY2N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-ARRAY-N-SAME #ARRAY1N(*) #ARRAY2N(*) #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'floats equal'
/***********************************************************************
  #ACCURACY := 0
  #NUM1 := 12345678,1234
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM1 #ACCURACY #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 12345678,1234
  #NUM2 := 12345678,1234
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 #ACCURACY #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 12345678,1234
  #NUM2 := 423423,1122
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 #ACCURACY #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 1,000001
  #NUM2 := 1,000002
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 #ACCURACY #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0,1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0,000001 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0,0000001 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 123456
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 #ACCURACY #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 123456,00
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 #ACCURACY #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 0,01 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 123456,0001
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 #ACCURACY #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 0,0001 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 0,00001 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM3 := 123457
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM3 #ACCURACY #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := -1234,00
  #NUM2 := -1234,00
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := -1234
  #NUM2 := 1234
  PERFORM WRAP-ASSERT-NUM-EQUALS #NUM1 #NUM2 0 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'strings empty or not'
/***********************************************************************
  #STRING1 := 'test'
  RESET #STRING2

  PERFORM WRAP-ASSERT-STRING-EMPTY #STRING1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-STRING-NOT-EMPTY #STRING1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  PERFORM WRAP-ASSERT-STRING-EMPTY #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-STRING-NOT-EMPTY #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #STRING2 := '     '
  PERFORM WRAP-ASSERT-STRING-EMPTY #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-STRING-NOT-EMPTY #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM3 := 123
  PERFORM WRAP-ASSERT-STRING-EMPTY #NUM3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  #NUM3 := 0
  PERFORM WRAP-ASSERT-STRING-EMPTY #NUM3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'number zero or not'
/***********************************************************************
  #NUM1 := 0
  PERFORM WRAP-ASSERT-NUM-NOT-ZERO #NUM1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 0,000001
  PERFORM WRAP-ASSERT-NUM-NOT-ZERO #NUM1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 1,0000
  PERFORM WRAP-ASSERT-NUM-NOT-ZERO #NUM1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'string contains another string'
/***********************************************************************
  #STRING1 := 'This is a test!'

  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 ' ' #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 'This' #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 ' is' #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 '!' #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 'This is a test!' #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 ' This' #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 'test! ' #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 '  ' #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  COMPRESS #STRING1 ' And another one.' INTO #STRING2
  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING1 #STRING2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-STRING-CONTAINS #STRING2 #STRING1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'compare numbers'
/***********************************************************************
  #NUM1 := 12345678,1234
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM1 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 12345678,1234
  #NUM2 := 12345678,1234
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 12345678,1234
  #NUM2 := 423423,1122
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := 12345678,123456
  #NUM2 := 12345678,123457
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 123456
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 123456,00
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := 123456,0001
  #NUM3 := 123456
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM3 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT

  #NUM1 := -1234
  #NUM2 := -1234
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT

  #NUM1 := -1234
  #NUM2 := 1234
  PERFORM WRAP-ASSERT-NUM-LESS-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #RESULT
  PERFORM WRAP-ASSERT-NUM-GREATER-THAN #NUM1 #NUM2 #RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #RESULT
END-IF

END-SUBROUTINE

END

