* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/***********************************************************************

/*  File: TCASARNC

/*  NATUNIT's internal TestCase for ASSERT-ARRAY-N-CONTAINS

/*  Parameters:
/*    NUTESTP - TestCase parameters.

/*  Returns:
/*    NUTESTP - TestCase parameters.

/***********************************************************************
DEFINE DATA

PARAMETER USING NUTESTP

LOCAL USING NUCONST
LOCAL USING NUASSP

LOCAL

01 #ARRAY (N8/1:*)

01 #ASSERTION-RESULT (L)

END-DEFINE

NUTESTP.FIXTURE := 'assert that a numerical array contains a value'

INCLUDE NUTCTEMP

DEFINE SUBROUTINE TEST

/***********************************************************************
IF NUTESTP.TEST EQ 'not initialized array should yield error'
/***********************************************************************
  REDUCE ARRAY #ARRAY TO 0
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 1 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #ASSERTION-RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'empty array should not contain element'
/***********************************************************************
  RESIZE ARRAY #ARRAY TO (1:3)
  RESET #ARRAY(*)
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 1 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #ASSERTION-RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'not existing element should not be found in array with 1 element'
/***********************************************************************
  RESIZE ARRAY #ARRAY TO (1:1)
  #ARRAY(1) := 1
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 2 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #ASSERTION-RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'not existing element should not be found in array with 2 elements'
/***********************************************************************
  RESIZE ARRAY #ARRAY TO (1:2)
  #ARRAY(1) := 1
  #ARRAY(2) := 2
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 3 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #ASSERTION-RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'similar element at the end should not be found in array'
/***********************************************************************
  RESIZE ARRAY #ARRAY TO (1:3)
  #ARRAY(1) := 1
  #ARRAY(2) := 2
  #ARRAY(3) := 13
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 3 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #ASSERTION-RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'similar element at the beginning should not be found in array'
/***********************************************************************
  RESIZE ARRAY #ARRAY TO (1:3)
  #ARRAY(1) := 1
  #ARRAY(2) := 2
  #ARRAY(3) := 31
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 3 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-FALSE NUASSP #ASSERTION-RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'existing element should be found in the middle'
/***********************************************************************
  RESIZE ARRAY #ARRAY TO (1:3)
  #ARRAY(1) := 1
  #ARRAY(2) := 2
  #ARRAY(3) := 3
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 2 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #ASSERTION-RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'existing element should be found at the beginning'
/***********************************************************************
  RESIZE ARRAY #ARRAY TO (1:3)
  #ARRAY(1) := 1
  #ARRAY(2) := 2
  #ARRAY(3) := 3
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 1 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #ASSERTION-RESULT
END-IF

/***********************************************************************
IF NUTESTP.TEST EQ 'existing element should be found at the end'
/***********************************************************************
  RESIZE ARRAY #ARRAY TO (1:3)
  #ARRAY(1) := 1
  #ARRAY(2) := 2
  #ARRAY(3) := 3
  PERFORM WRAP-ASSERT-ARRAY-N-CONTAINS #ARRAY(*) 3 #ASSERTION-RESULT
  ASSERT-LINE := *LINE; PERFORM ASSERT-TRUE NUASSP #ASSERTION-RESULT
END-IF

END-SUBROUTINE

END

